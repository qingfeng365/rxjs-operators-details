.container
  h3 throttleTime
  .panel.panel-success
    .panel-heading 对比分析
      .list-group
  .panel.panel-info
    .panel-heading throttleTime(按时节流阀) 说明
    .panel-body
      p 签名: throttleTime(duration: number, scheduler: Scheduler): Observable
      p 当指定的持续时间经过后发出最新值
      p 从源 Observable 中发出一个值，然后在 duration 毫秒内忽略随后发出的源值， 然后重复此过程
      p 让一个值通过，然后在接下来的 duration 毫秒内忽略源值
      p 当 throttle 的内部定时器禁用时，它会在输出 Observable 上发出源 Observable 的值， 并当定时器启用时忽略源值。最开始时，定时器是禁用的。一旦第一个源值达到，它会被转发 到输出 Observable ，然后启动定时器。在 duration 毫秒(或由可选的 scheduler 内部确定的时间单位)后，定时器会被禁用，并且下一个源值也是重复此过程。可选择性地 接收一个 IScheduler 用来管理定时器
      p throttleTime 是 throttle 的语法糖
      img.img-responsive.center-block(src="../assets/images/throttleTime.png")
      pre.pre-scrollable.
        弹珠图解析:
        - throttleTime 相当于是个阀门,如果阀门关上,则会定时打开
        - 阀门打开后,会保持打开状态,直到 源 Observable 有值发出,会再次关上
        - 阀门一开始是打开状态
        - 源 Observable 发出 'a' 时, 阀门处于打开状态(初始状态),
          输出 'a', 并关闭阀门
        - 源 Observable 发出 'x' 'y' 时, 阀门持续关闭时间还没到,
          阀门仍处于关闭状态, 没有值输出
        - 阀门在 duration 时间后打开, 此时源 Observable 还没有值发出,
          阀门一直保持打开状态
        - 源 Observable 发出 'b' 时, 阀门处于打开状态,
          输出 'b', 并关闭阀门, 阀门将在 duration 时间后打开
        - 以此类推
  .panel.panel-info
    .panel-heading 示例1:
    .panel-body
      pre.pre-scrollable([innerHtml]="demo1Info")
      p
        button.btn.btn-primary(type="button",
          [disabled]="isRuning",
          (click)="runDemo1();$event.stopPropagation()") 运行
